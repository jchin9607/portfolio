{"mappings":"AAAA,SAAS;IACP,OAAO,mBAAmB,IAAI,CAAC,UAAU,SAAS,KAAK,CAAC,CAAE,CAAA,UAAU,SAAS,CAAC,KAAK,CAAC,kBAAkB,CAAC,UAAU,SAAS,CAAC,KAAK,CAAC,QAAO;AAC1I;AAEA,wEAAwE;AAIxE,IAAI,oBAAoB,OAAO;IAE7B,MAAM,UAAU,SAAS,gBAAgB,CAAC;IAC1C,IAAI,gBAAgB;IAEpB,MAAM,WAAW,IAAI,qBACnB,CAAC;QACC,QAAQ,OAAO,CAAC,CAAC;YACf,IAAI,MAAM,cAAc,EAAE;gBACxB,IAAI,eACF,cAAc,SAAS,CAAC,GAAG,CAAC;gBAE9B,MAAM,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;gBAC9B,gBAAgB,MAAM,MAAM;YAC9B;QACF;IACF,GACA;QACE,WAAW;QACX,YAAY;IACd;IAGF,QAAQ,OAAO,CAAC,CAAC;QACf,SAAS,OAAO,CAAC;IACnB;AACF,OACK;IACH,SAAS,aAAa,CAAC,UAAU,SAAS,CAAC,MAAM,CAAC;IAClD,MAAM,gBAAgB,SAAS,gBAAgB,CAAC;IAChD,MAAM,mBAAmB,aAAa,CAAC,cAAc,MAAM,GAAG,EAAE;IAChE,iBAAiB,SAAS,CAAC,MAAM,CAAC;AACpC;AAGA,MAAM,OAAO,SAAS,gBAAgB,CAAC;AAEvC,MAAM,cAAc,IAAI,qBAAqB,CAAC;IAC5C,QAAQ,OAAO,CAAC,CAAC;QACf,IAAI,MAAM,cAAc,EACtB,MAAM,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC;IAE/B;AACF,GAAG;IACD,YAAY;AACd;AAEA,KAAK,OAAO,CAAC,CAAC;IACZ,YAAY,OAAO,CAAC;AACtB;AAEA,SAAS,UAAU,IAAI;IACnB,OAAO,IAAI,CAAC,MAAM;AACtB;AAEA,SAAS;IACP,SAAS,cAAc,CAAC,UAAU,KAAK,CAAC,OAAO,GAAG;AAEpD;AAEA,SAAS;IACP,SAAS,cAAc,CAAC,UAAU,KAAK,CAAC,OAAO,GAAG;AACpD;AAEA,2EAA2E;AAE3E,+DAA+D;AAC/D,iCAAiC;AACjC,kCAAkC;AAClC,mCAAmC;AACnC,QAAQ;AACR,OAAO;AACP,OAAO;AACP,uBAAuB;AACvB,MAAM;AAEN,gCAAgC;AAChC,8BAA8B;AAC9B,MAAM;AAEN,IAAI,YAAY,IAAI,qBAAqB,SAAS,OAAO;IACvD,QAAQ,OAAO,CAAC,SAAS,KAAK;QAC5B,IAAI,MAAM,iBAAiB,GAAG,GAAG;YAC/B,SAAS,aAAa,CAAC,UAAU,KAAK,CAAC,KAAK,GAAG;YAC/C,SAAS,aAAa,CAAC,cAAc,KAAK,CAAC,eAAe,GAAG;YAC7D,SAAS,aAAa,CAAC,cAAc,KAAK,CAAC,KAAK,GAAG;QAEnD,8CAA8C;QAChD,OAAO;YACL,SAAS,aAAa,CAAC,UAAU,KAAK,CAAC,KAAK,GAAG;YAC/C,SAAS,aAAa,CAAC,cAAc,KAAK,CAAC,eAAe,GAAG;YAC7D,SAAS,aAAa,CAAC,cAAc,KAAK,CAAC,KAAK,GAAG;QACnD,kDAAkD;QACpD;IACF;AACF,GAAG;IACD,YAAY;AACd;AAEA,oDAAoD;AACpD,UAAU,OAAO,CAAC,SAAS,aAAa,CAAC,aACzC,0DAA0D;CAC1D,4DAA4D","sources":["script.js"],"sourcesContent":["function isSafariMobile() {\r\n  return /iPad|iPhone|iPod/.test(navigator.userAgent) && !!(navigator.userAgent.match(/AppleWebKit/) && !navigator.userAgent.match('CriOS'));\r\n}\r\n\r\n// var isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n\r\n\r\n\r\nif (isSafariMobile() == false) {\r\n  \r\n  const headers = document.querySelectorAll('.intro');\r\n  let currentHeader = null;\r\n\r\n  const observer = new IntersectionObserver(\r\n    (entries) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          if (currentHeader) {\r\n            currentHeader.classList.add('not-focused');\r\n          }\r\n          entry.target.classList.remove('not-focused');\r\n          currentHeader = entry.target;\r\n        }\r\n      });\r\n    },\r\n    {\r\n      threshold: 0.3,\r\n      rootMargin: '0% 0px -80% 0px',\r\n    }\r\n  );\r\n\r\n  headers.forEach((header) => {\r\n    observer.observe(header);\r\n  });\r\n}\r\nelse {\r\n  document.querySelector('.intro').classList.remove('not-focused');\r\n  const introElements = document.querySelectorAll('.intro');\r\n  const lastIntroElement = introElements[introElements.length - 1];\r\n  lastIntroElement.classList.remove('not-focused');\r\n}\r\n\r\n\r\nconst text = document.querySelectorAll('.textabout, .projects img, .experience a');\r\n\r\nconst scrollAnime = new IntersectionObserver((entries) => {\r\n  entries.forEach((entry) => {\r\n    if (entry.isIntersecting) {\r\n      entry.target.classList.add('in-view');\r\n    }\r\n  })\r\n}, {\r\n  rootMargin: \"0px\",\r\n});\r\n\r\ntext.forEach((text) => {\r\n  scrollAnime.observe(text);\r\n});\r\n\r\nfunction cardClick(link) {\r\n    window.open(link, '_blank');\r\n}\r\n\r\nfunction openNav() {\r\n  document.getElementById(\"my-nav\").style.display = \"flex\";\r\n  \r\n}\r\n\r\nfunction closeNav() {\r\n  document.getElementById(\"my-nav\").style.display = \"none\";\r\n}\r\n\r\n// const headercolor = document.querySelectorAll('.about .projects .work');\r\n\r\n// const headerchange = new IntersectionObserver((entries) => {\r\n//   entries.forEach((entry) => {\r\n//     if (entry.isIntersecting) {\r\n//       entry.style.color = \"red\";\r\n//     }\r\n//   })\r\n// }, {\r\n//   rootMargin: \"0px\",\r\n// });\r\n\r\n// headercolor.forEach((h1) => {\r\n//   headerchange.observe(h1);\r\n// });\r\n\r\nvar observerz = new IntersectionObserver(function(entries) {\r\n  entries.forEach(function(entry) {\r\n    if (entry.intersectionRatio > 0) {\r\n      document.querySelector('header').style.color = 'var(--primary-color)';\r\n      document.querySelector('.navwindow').style.backgroundColor = 'var(--primary-color)'\r\n      document.querySelector('.navwindow').style.color = 'var(--text-color)'\r\n      \r\n      // console.log('Element is in the viewport!');\r\n    } else {\r\n      document.querySelector('header').style.color = 'var(--text-color)';\r\n      document.querySelector('.navwindow').style.backgroundColor = 'var(--secondary-color)'\r\n      document.querySelector('.navwindow').style.color = 'var(--primary-color)'\r\n      // console.log('Element is NOT in the viewport!');\r\n    }\r\n  });\r\n}, {\r\n  rootMargin: '0px 0px -99% 0px'\r\n});\r\n\r\n// var myElement = document.getElementById('about');\r\nobserverz.observe(document.querySelector('.graaay'));\r\n// observerz.observe(document.getElementById('projects'));\r\n// observerz.observe(document.getElementById('experience'));"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}